import { type NextRequest, NextResponse } from "next/server"
import { GoogleGenerativeAI } from "@google/generative-ai"

interface MarketingContentRequest {
  productData: any
  type: "email" | "social" | "ad" | "blog" | "newsletter"
  target?: string
  tone?: "professional" | "casual" | "urgent" | "friendly"
  length?: "short" | "medium" | "long"
}

interface MarketingContent {
  type: string
  title: string
  content: string
  callToAction: string
  hashtags?: string[]
  subject?: string
  preview?: string
  variations?: string[]
}

export async function POST(request: NextRequest) {
  try {
    const {
      productData,
      type,
      target = "geral",
      tone = "friendly",
      length = "medium",
    }: MarketingContentRequest = await request.json()

    if (!productData || !type) {
      return NextResponse.json({ success: false, error: "Dados do produto e tipo s√£o obrigat√≥rios" }, { status: 400 })
    }

    // Verificar configura√ß√£o da IA
    const apiKey = process.env.GEMINI_API_KEY || process.env.GOOGLE_AI_API_KEY
    if (!apiKey) {
      return NextResponse.json({ success: false, error: "IA n√£o configurada" }, { status: 500 })
    }

    const genAI = new GoogleGenerativeAI(apiKey)
    const model = genAI.getGenerativeModel({
      model: process.env.GOOGLE_AI_MODEL || "gemini-1.5-flash-001",
    })

    // Construir prompt espec√≠fico para o tipo de conte√∫do
    const prompt = buildMarketingPrompt(productData, type, target, tone, length)

    // Gerar conte√∫do
    const result = await model.generateContent(prompt)
    const response = await result.response
    const generatedText = response.text()

    // Processar resposta
    const content = parseMarketingResponse(generatedText, type, productData)

    return NextResponse.json({
      success: true,
      data: content,
    })
  } catch (error) {
    console.error("Erro na gera√ß√£o de conte√∫do de marketing:", error)
    return NextResponse.json(
      {
        success: false,
        error: "Erro interno na gera√ß√£o",
        details: error instanceof Error ? error.message : "Erro desconhecido",
      },
      { status: 500 },
    )
  }
}

export async function GET(request: NextRequest) {
  try {
    const { searchParams } = new URL(request.url)
    const contentType = searchParams.get("type")
    const productId = searchParams.get("productId")

    if (!contentType) {
      return NextResponse.json({ success: false, error: "Tipo de conte√∫do √© obrigat√≥rio" }, { status: 400 })
    }

    // Retornar exemplo de conte√∫do baseado no tipo
    const mockContent = generateMockContent(contentType, productId)

    return NextResponse.json({
      success: true,
      data: mockContent,
    })
  } catch (error) {
    console.error("Erro ao buscar conte√∫do:", error)
    return NextResponse.json({ success: false, error: "Erro ao buscar conte√∫do" }, { status: 500 })
  }
}

function buildMarketingPrompt(productData: any, type: string, target: string, tone: string, length: string): string {
  const baseContext = `
Voc√™ √© um especialista em marketing digital para e-commerce brasileiro.
Crie conte√∫do de marketing para a Volaron Store, especializada em utilidades dom√©sticas.

PRODUTO:
${JSON.stringify(productData, null, 2)}

TIPO DE CONTE√öDO: ${type}
P√öBLICO-ALVO: ${target}
TOM: ${tone}
TAMANHO: ${length}

CONTEXTO DA MARCA:
- Volaron Store: l√≠der em utilidades dom√©sticas
- Valores: qualidade, praticidade, bom pre√ßo
- P√∫blico: fam√≠lias brasileiras, classe m√©dia
- Diferencial: atendimento personalizado e produtos selecionados
`

  let specificInstructions = ""

  switch (type) {
    case "email":
      specificInstructions = `
INSTRU√á√ïES PARA EMAIL MARKETING:
1. Crie um assunto atrativo (m√°x 50 chars)
2. Texto de preview envolvente
3. Conte√∫do persuasivo mas n√£o invasivo
4. Call-to-action claro e direto
5. Personaliza√ß√£o quando poss√≠vel

FORMATO DE RESPOSTA (JSON):
{
  "type": "email",
  "subject": "Assunto do email",
  "preview": "Texto de preview",
  "title": "T√≠tulo principal",
  "content": "Conte√∫do completo do email",
  "callToAction": "Texto do bot√£o CTA",
  "variations": ["varia√ß√£o 1 do assunto", "varia√ß√£o 2"]
}
`
      break

    case "social":
      specificInstructions = `
INSTRU√á√ïES PARA REDES SOCIAIS:
1. Conte√∫do engajante e visual
2. Hashtags relevantes (#volaron #casa #utilidades)
3. Call-to-action natural
4. Linguagem adequada √† plataforma
5. M√°ximo 280 caracteres para Twitter, mais livre para Instagram/Facebook

FORMATO DE RESPOSTA (JSON):
{
  "type": "social",
  "title": "T√≠tulo/Headline",
  "content": "Texto da postagem",
  "callToAction": "CTA da postagem",
  "hashtags": ["#hashtag1", "#hashtag2"],
  "variations": ["varia√ß√£o 1", "varia√ß√£o 2"]
}
`
      break

    case "ad":
      specificInstructions = `
INSTRU√á√ïES PARA AN√öNCIO:
1. Headline impactante
2. Descri√ß√£o persuasiva
3. Benef√≠cios claros
4. Urg√™ncia quando apropriado
5. CTA forte e direto

FORMATO DE RESPOSTA (JSON):
{
  "type": "ad",
  "title": "Headline do an√∫ncio",
  "content": "Texto do an√∫ncio",
  "callToAction": "Bot√£o de a√ß√£o",
  "variations": ["headline alternativo 1", "headline alternativo 2"]
}
`
      break

    default:
      specificInstructions = `
INSTRU√á√ïES GERAIS:
1. Conte√∫do atrativo e relevante
2. Linguagem clara e objetiva
3. Foco nos benef√≠cios do produto
4. Call-to-action apropriado

FORMATO DE RESPOSTA (JSON):
{
  "type": "${type}",
  "title": "T√≠tulo do conte√∫do",
  "content": "Conte√∫do principal",
  "callToAction": "A√ß√£o desejada"
}
`
  }

  return `${baseContext}\n${specificInstructions}\n\nResponda APENAS com o JSON, sem explica√ß√µes adicionais.`
}

function parseMarketingResponse(generatedText: string, type: string, productData: any): MarketingContent {
  try {
    // Tentar extrair JSON da resposta
    const jsonMatch = generatedText.match(/\{[\s\S]*\}/)
    if (jsonMatch) {
      const parsed = JSON.parse(jsonMatch[0])
      return {
        type: parsed.type || type,
        title: parsed.title || `${productData.name} - Volaron Store`,
        content: parsed.content || "Conte√∫do n√£o dispon√≠vel",
        callToAction: parsed.callToAction || "Compre Agora",
        hashtags: parsed.hashtags || [],
        subject: parsed.subject,
        preview: parsed.preview,
        variations: parsed.variations || [],
      }
    }
  } catch (error) {
    console.error("Erro ao processar resposta da IA:", error)
  }

  // Fallback para conte√∫do b√°sico
  return generateFallbackContent(type, productData)
}

function generateFallbackContent(type: string, productData: any): MarketingContent {
  const productName = productData.name || "Produto"

  switch (type) {
    case "email":
      return {
        type: "email",
        title: `Oferta Especial: ${productName}`,
        content: `
Ol√°!

Temos uma oferta especial para voc√™ na Volaron Store!

O ${productName} est√° com condi√ß√µes imperd√≠veis. N√£o perca esta oportunidade de levar qualidade para sua casa com o melhor pre√ßo.

‚úÖ Qualidade garantida
‚úÖ Entrega r√°pida
‚úÖ Atendimento especializado

Aproveite enquanto durarem os estoques!
        `.trim(),
        callToAction: "Ver Oferta",
        subject: `üè† Oferta Especial: ${productName}`,
        preview: "N√£o perca esta oportunidade imperd√≠vel!",
      }

    case "social":
      return {
        type: "social",
        title: `${productName} na Volaron! üè†`,
        content: `
üåü ${productName} chegou na Volaron Store!

Qualidade que voc√™ j√° conhece, pre√ßo que voc√™ vai amar. 

#VolaronStore #Casa #Qualidade #Oferta
        `.trim(),
        callToAction: "Compre Agora",
        hashtags: ["#VolaronStore", "#Casa", "#Qualidade", "#Oferta"],
      }

    case "ad":
      return {
        type: "ad",
        title: `${productName} - Qualidade Volaron`,
        content: `
Descubra o ${productName} na Volaron Store. 
Qualidade garantida, pre√ßo justo e entrega r√°pida.
Sua casa merece o melhor!
        `.trim(),
        callToAction: "Comprar Agora",
      }

    default:
      return {
        type,
        title: `${productName} - Volaron Store`,
        content: `Conhe√ßa o ${productName} na Volaron Store. Qualidade e praticidade para sua casa.`,
        callToAction: "Saiba Mais",
      }
  }
}

function generateMockContent(contentType: string, productId?: string | null): MarketingContent {
  const productName = productId ? `Produto ${productId}` : "Produto Exemplo"

  return generateFallbackContent(contentType, { name: productName })
}
